version: '3.1'

services: 
    db:
        container_name: newsletter_db
        image: mysql
        volumes: 
            - db_data:/var/lib/mysql
            - ./db.sql:/docker-entrypoint-initdb.d/db.sql
        ports:
            - 3308:3306
            - 33080:33060
        networks: 
            - newsletter_network
        environment: 
            - MYSQL_ROOT_PASSWORD=rootmaster
            - MYSQL_DATABASE=newsletter_db
            - MYSQL_USER=newsletter_user
            - MYSQL_PASSWORD=newsletter_pass
        restart: always
    
    zookeeper-server:
        container_name: newsletter_zookeeper_server
        image: bitnami/zookeeper
        volumes: 
            - zoo_data:/bitnami/zookeeper
        networks: 
            - newsletter_network
        ports: 
            - 2182:2181
        environment: 
            - ALLOW_ANONYMOUS_LOGIN=yes
    
    kafka-server:
        container_name: newsletter_kafka_server
        image: bitnami/kafka
        volumes: 
            - kafka_data:/bitnami/kafka
        networks: 
            - newsletter_network
        ports: 
            - 9093:9092
            - 29093:29092
        environment:
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:2181
            - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT 
            - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092 
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
            - ALLOW_PLAINTEXT_LISTENER=yes 
        depends_on: 
            - zookeeper-server

    kafka-ui:
        container_name: newsletter_kafka_ui
        image: provectuslabs/kafka-ui
        networks: 
            - newsletter_network
        ports:
            - 8090:8080
        restart: always
        environment:
            - KAFKA_CLUSTERS_0_NAME=Dev
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-server:9092
            - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-server:2181
        depends_on: 
            - zookeeper-server

    api: 
        container_name: newsletter_api
        build: ./microservice-api
        networks: 
            - newsletter_network
        ports:
            - 9090:9090
        restart: always
        environment:
            - APP_ENVIRONMENT=dev
            - MYSQL_HOST=db
            - MYSQL_PORT=3306
            - MYSQL_DBNAME=newsletter_db
            - MYSQL_USER=newsletter_user
            - MYSQL_PASS=newsletter_pass
            - NEWSLETTER_QUEUE=newsletter_mails
            - KAFKA_HOST=kafka-server:9092
        depends_on: 
            - db
            - kafka-server
        
volumes:
    db_data: {}
    zoo_data: {}
    kafka_data: {}
    
networks:
    newsletter_network:
        driver: bridge